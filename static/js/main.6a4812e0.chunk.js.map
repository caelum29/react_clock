{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","clock","this","tick","clearInterval","setInterval","setState","console","log","toLocaleTimeString","React","Component","App","clockName","isClockVisible","_prevProps","prevState","Math","floor","random","className","onClick","hideClock","type","showClock","randomName","name","ReactDOM","render","document","getElementById"],"mappings":"sNASaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKUC,WALV,yDAOE,WACEC,KAAKC,SART,kCAWE,WACMD,KAAKD,OACPG,cAAcF,KAAKD,SAbzB,kBAiBE,WAAQ,IAAD,OACLC,KAAKD,MAAQI,aAAY,WACvB,EAAKC,SAAS,CACZP,KAAM,IAAIC,OAGZO,QAAQC,IAAI,EAAKV,MAAMC,KAAKU,wBAC3B,OAxBP,oBA2BE,WACE,OACE,8BACE,8BACG,iBACAP,KAAKJ,MAAMC,KAAKU,8BAhC3B,GAA2BC,IAAMC,WCA3BC,E,4MACJd,MAAQ,CACNe,UAAW,EACXC,gBAAgB,G,wDAGlB,SAAmBC,EAA0BC,GAE3CT,QAAQC,IAAR,qCAA0CQ,EAAUH,UAApD,eAAoEX,KAAKJ,MAAMe,c,wBAGjF,WACEX,KAAKI,SAAS,CACZO,UAAWI,KAAKC,MAAM,GAAAD,KAAKE,UAAwB,M,uBAIvD,WACOjB,KAAKJ,MAAMgB,gBACdZ,KAAKI,SAAS,CACZQ,gBAAgB,M,uBAKtB,WACMZ,KAAKJ,MAAMgB,gBACbZ,KAAKI,SAAS,CACZQ,gBAAgB,M,oBAKtB,WAAU,IAAD,OACP,OACE,sBAAKM,UAAU,MAAf,UACE,6CACA,wBACEC,QAAS,kBAAM,EAAKC,aACpBC,KAAK,SAFP,kBAMC,MACD,wBACEF,QAAS,kBAAM,EAAKG,aACpBD,KAAK,SAFP,kBAMC,OACD,wBAAQF,QAAS,kBAAM,EAAKI,cAAcF,KAAK,SAA/C,yBACCrB,KAAKJ,MAAMgB,gBAAkB,cAAC,EAAD,CAAOY,KAAMxB,KAAKJ,MAAMe,mB,GApD5CH,IAAMC,WA0DTC,IChEfe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6a4812e0.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  private clock: NodeJS.Timeout | undefined;\n\n  componentDidMount() {\n    this.tick();\n  }\n\n  componentWillUnmount() {\n    if (this.clock) {\n      clearInterval(this.clock);\n    }\n  }\n\n  tick() {\n    this.clock = setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          {'Current time: '}\n          {this.state.date.toLocaleTimeString()}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: number,\n  isClockVisible: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    clockName: 0,\n    isClockVisible: true,\n  };\n\n  componentDidUpdate(_prevProps: Readonly<{}>, prevState: Readonly<State>) {\n    // eslint-disable-next-line no-console\n    console.log(`The Clock was renamed from ${prevState.clockName} to ${this.state.clockName}`);\n  }\n\n  randomName() {\n    this.setState({\n      clockName: Math.floor(Math.random() * (100 - 1)) + 1,\n    });\n  }\n\n  showClock() {\n    if (!this.state.isClockVisible) {\n      this.setState({\n        isClockVisible: true,\n      });\n    }\n  }\n\n  hideClock() {\n    if (this.state.isClockVisible) {\n      this.setState({\n        isClockVisible: false,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          onClick={() => this.hideClock()}\n          type=\"button\"\n        >\n          Hide\n        </button>\n        {'   '}\n        <button\n          onClick={() => this.showClock()}\n          type=\"button\"\n        >\n          Show\n        </button>\n        {'    '}\n        <button onClick={() => this.randomName()} type=\"button\">Random name</button>\n        {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}